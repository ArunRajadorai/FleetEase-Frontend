{"version":3,"file":"static/js/8193.8f615b7b.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : children.ref);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","body","contains","context","node","compareDocumentPosition","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","resolveContainerRef","ref","document","getBoundingClientRect","_excluded","useRTGTransitionProps","_ref","onEnter","onEntering","onEntered","onExit","onExiting","onExited","addEndListener","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","nodeRef","mergedRef","useMergedRefs","normalize","callback","param","handleEnter","useCallback","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","assign","status","innerProps","cloneElement","React","component","Component","transitionProps","_jsx","ImperativeTransition","_ref2","in","inProp","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useEventCallback","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","combinedRef","renderTransition","runTransition","RTGTransition","NoopTransition","manager","useModalManager","provided","modalManager","ModalManager","getManager","modal","dialog","backdrop","add","remove","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","className","style","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","container","containerRef","onShow","onHide","rest","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","tabIndex","unmountOnExit","mountOnEnter","appear","arguments","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","constructor","handleContainerOverflow","isRTL","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","overflow","paddingProp","scrollBarWidth","concat","parseInt","css","setAttribute","reset","forEach","m","removeContainerStyle","removeAttribute","modalIdx","push","state","splice","closeLabel","closeVariant","closeButton","ModalContext","handleClick","CloseButton","variant","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","classList","baseVal","hasClass","marginProp","qsa","el","sharedManager","getSharedManager","propTypes","PropTypes","ariaLabel","type","classNames","p"],"sourceRoot":""}